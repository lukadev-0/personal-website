import type { CollectionEntry } from "astro:content";
import satori, { type SatoriOptions } from "satori";

import plusJakartaSans600Normal from "@fontsource/plus-jakarta-sans/files/plus-jakarta-sans-latin-600-normal.woff?arraybuffer";
import plusJakartaSans800Normal from "@fontsource/plus-jakarta-sans/files/plus-jakarta-sans-latin-800-normal.woff?arraybuffer";

export type Props = {
  post: CollectionEntry<"blog">;
};

const colors = {
  gray: {
    50: "#efeffa",
    100: "#e3e3f2",
    200: "#dbdbe7",
    300: "#d1d1dd",
    400: "#b0b0be",
    500: "#8e8ea1",
    600: "#4c4c5c",
    700: "#2b2b35",
    800: "#14141b",
    900: "#0e0e12",
    950: "#060609",
  },
  dark: "#060609",
  light: "#EFEFFA",
};

const satoriOptions: SatoriOptions = {
  width: 1280,
  height: 640,
  fonts: [
    {
      name: "Plus Jakarta Sans",
      data: plusJakartaSans600Normal,
      weight: 600,
      style: "normal",
    },
    {
      name: "Plus Jakarta Sans",
      data: plusJakartaSans800Normal,
      weight: 800,
      style: "normal",
    },
  ],
};

export async function generateBlogImageSvg(props: Props) {
  return await satori(<BlogImage {...props} />, satoriOptions);
}

export function BlogImage({ post }: Props) {
  return (
    <div
      style={{
        display: "flex",
        padding: "120px",
        background: colors.dark,
        color: colors.light,
        height: "100%",
        width: "100%",
        flexDirection: "column",
        justifyContent: "space-between",
      }}
    >
      <div
        style={{
          height: "50%",
          fontWeight: "800",
          fontSize: "80px",
        }}
      >
        {post.data.title}
      </div>
      <div
        style={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
        }}
      >
        <Logotype height="36" />
        <div
          style={{
            fontSize: "32px",
            fontWeight: "600",
            color: colors.gray[400],
          }}
        >
          {post.data.date.toLocaleDateString("en-US", {
            month: "short",
            day: "numeric",
            year: "numeric",
          })}
        </div>
      </div>
    </div>
  );
}

function Logotype(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      viewBox="0 0 178 31"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M10.3333 0H15.5C17.5355 0 19.551 0.400918 21.4316 1.17987C23.3121 1.95881 25.0208 3.10053 26.4602 4.53984C27.8995 5.97915 29.0412 7.68786 29.8201 9.5684C30.5991 11.449 31 13.4645 31 15.5C31 17.5355 30.5991 19.551 29.8201 21.4316C29.0412 23.3121 27.8995 25.0208 26.4602 26.4602C25.0208 27.8995 23.3121 29.0412 21.4316 29.8201C19.551 30.5991 17.5355 31 15.5 31H0V0L6.02778 6.02778V24.1111H15.5C16.6308 24.1111 17.7506 23.8884 18.7953 23.4556C19.8401 23.0229 20.7894 22.3886 21.589 21.589C22.3886 20.7894 23.0229 19.8401 23.4556 18.7953C23.8884 17.7506 24.1111 16.6308 24.1111 15.5C24.1111 14.3692 23.8884 13.2494 23.4556 12.2047C23.0229 11.1599 22.3886 10.2106 21.589 9.41102C20.7894 8.61141 19.8401 7.97712 18.7953 7.54437C17.7506 7.11162 16.6308 6.88889 15.5 6.88889L15.5 18.9444L10.3333 14.2083V0Z"
        fill="currentColor"
      ></path>
      <path
        d="M41.196 29V1.748H45.912V29H41.196ZM57.2503 29.432C55.7383 29.432 54.4183 29.096 53.2903 28.424C52.1863 27.752 51.3343 26.816 50.7343 25.616C50.1583 24.416 49.8703 23.012 49.8703 21.404V9.416H54.5863V21.008C54.5863 21.824 54.7423 22.544 55.0543 23.168C55.3903 23.768 55.8583 24.248 56.4583 24.608C57.0823 24.944 57.7783 25.112 58.5463 25.112C59.3143 25.112 59.9983 24.944 60.5983 24.608C61.1983 24.248 61.6663 23.756 62.0023 23.132C62.3383 22.508 62.5063 21.764 62.5063 20.9V9.416H67.2223V29H62.7583V25.148L63.1543 25.832C62.6983 27.032 61.9423 27.932 60.8863 28.532C59.8543 29.132 58.6423 29.432 57.2503 29.432ZM71.6062 29V1.748H76.3222V19.604L74.5222 19.064L83.7382 9.416H89.6062L82.3702 17.3L89.7502 29H84.3502L77.9422 18.848L80.7502 18.272L74.8462 24.608L76.3222 21.728V29H71.6062ZM98.3235 29.432C96.9555 29.432 95.7675 29.204 94.7595 28.748C93.7515 28.292 92.9715 27.644 92.4195 26.804C91.8675 25.94 91.5915 24.944 91.5915 23.816C91.5915 22.736 91.8315 21.776 92.3115 20.936C92.7915 20.072 93.5355 19.352 94.5435 18.776C95.5515 18.2 96.8235 17.792 98.3595 17.552L104.768 16.508V20.108L99.2595 21.044C98.3235 21.212 97.6275 21.512 97.1715 21.944C96.7155 22.376 96.4875 22.94 96.4875 23.636C96.4875 24.308 96.7395 24.848 97.2435 25.256C97.7715 25.64 98.4195 25.832 99.1875 25.832C100.172 25.832 101.036 25.628 101.78 25.22C102.548 24.788 103.136 24.2 103.544 23.456C103.976 22.712 104.192 21.896 104.192 21.008V15.968C104.192 15.128 103.856 14.432 103.184 13.88C102.536 13.304 101.672 13.016 100.592 13.016C99.5835 13.016 98.6835 13.292 97.8915 13.844C97.1235 14.372 96.5595 15.08 96.1995 15.968L92.3475 14.096C92.7315 13.064 93.3315 12.176 94.1475 11.432C94.9875 10.664 95.9715 10.064 97.0995 9.632C98.2275 9.2 99.4515 8.984 100.771 8.984C102.38 8.984 103.796 9.284 105.02 9.884C106.244 10.46 107.192 11.276 107.864 12.332C108.56 13.364 108.908 14.576 108.908 15.968V29H104.444V25.652L105.452 25.58C104.948 26.42 104.348 27.128 103.652 27.704C102.956 28.256 102.164 28.688 101.276 29C100.388 29.288 99.4035 29.432 98.3235 29.432ZM122.374 29.432C120.478 29.432 118.786 28.988 117.298 28.1C115.81 27.188 114.634 25.952 113.77 24.392C112.906 22.832 112.474 21.104 112.474 19.208C112.474 17.288 112.906 15.56 113.77 14.024C114.634 12.488 115.81 11.264 117.298 10.352C118.81 9.44 120.49 8.984 122.338 8.984C123.826 8.984 125.146 9.284 126.298 9.884C127.474 10.46 128.398 11.276 129.07 12.332L128.35 13.304V1.748H133.066V29H128.602V25.22L129.106 26.156C128.434 27.212 127.498 28.028 126.298 28.604C125.098 29.156 123.79 29.432 122.374 29.432ZM122.878 25.112C123.958 25.112 124.906 24.86 125.722 24.356C126.538 23.852 127.174 23.156 127.63 22.268C128.11 21.38 128.35 20.36 128.35 19.208C128.35 18.08 128.11 17.072 127.63 16.184C127.174 15.272 126.538 14.564 125.722 14.06C124.906 13.556 123.958 13.304 122.878 13.304C121.822 13.304 120.874 13.568 120.034 14.096C119.194 14.6 118.534 15.296 118.054 16.184C117.598 17.048 117.37 18.056 117.37 19.208C117.37 20.36 117.598 21.38 118.054 22.268C118.534 23.156 119.194 23.852 120.034 24.356C120.874 24.86 121.822 25.112 122.878 25.112ZM146.742 29.432C144.726 29.432 142.962 28.976 141.45 28.064C139.938 27.152 138.762 25.916 137.922 24.356C137.082 22.796 136.662 21.068 136.662 19.172C136.662 17.204 137.082 15.464 137.922 13.952C138.786 12.416 139.95 11.204 141.414 10.316C142.902 9.428 144.558 8.984 146.382 8.984C147.918 8.984 149.262 9.236 150.414 9.74C151.59 10.244 152.586 10.94 153.402 11.828C154.218 12.716 154.842 13.736 155.274 14.888C155.706 16.016 155.922 17.24 155.922 18.56C155.922 18.896 155.898 19.244 155.85 19.604C155.826 19.964 155.766 20.276 155.67 20.54H140.55V16.94H153.006L150.774 18.632C150.99 17.528 150.93 16.544 150.594 15.68C150.282 14.816 149.754 14.132 149.01 13.628C148.29 13.124 147.414 12.872 146.382 12.872C145.398 12.872 144.522 13.124 143.754 13.628C142.986 14.108 142.398 14.828 141.99 15.788C141.606 16.724 141.462 17.864 141.558 19.208C141.462 20.408 141.618 21.476 142.026 22.412C142.458 23.324 143.082 24.032 143.898 24.536C144.738 25.04 145.698 25.292 146.778 25.292C147.858 25.292 148.77 25.064 149.514 24.608C150.282 24.152 150.882 23.54 151.314 22.772L155.13 24.644C154.746 25.58 154.146 26.408 153.33 27.128C152.514 27.848 151.542 28.412 150.414 28.82C149.31 29.228 148.086 29.432 146.742 29.432ZM165.049 29L157.345 9.416H162.493L168.073 24.824H166.165L171.781 9.416H176.929L169.225 29H165.049Z"
        fill="currentColor"
      ></path>
    </svg>
  );
}
