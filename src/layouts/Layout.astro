---
import "@fontsource-variable/plus-jakarta-sans";

export interface Props {
  meta: Meta;
  class?: string;
}

export interface Meta {
  title:
    | string
    | {
        htmlTitle: string;
        ogTitle: string;
      };
  type?: string;
  description: string;
  image?: string;
  url?: string;
}

const { meta, class: className } = Astro.props;

const htmlTitle =
  typeof meta.title === "string"
    ? `${meta.title} - lukadev`
    : meta.title.htmlTitle;
const ogTitle =
  typeof meta.title === "string" ? meta.title : meta.title.ogTitle;
const canonicalUrl = new URL(meta.url ?? Astro.url.pathname, Astro.site);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link id="favicon" rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={canonicalUrl} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="lukadev's blog"
      href={new URL("rss.xml", Astro.site)}
    />

    <title>{htmlTitle}</title>
    <meta name="description" content={meta.description} />
    <meta property="og:site_name" content="lukadev" />
    <meta property="og:type" content={meta.type ?? "website"} />
    <meta property="og:title" content={ogTitle} />
    <meta property="og:description" content={meta.description} />
    <meta
      property="og:image"
      content={new URL(meta.image ?? "/default-og-image.webp", Astro.url)}
    />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:site" content="@lukadev_0" />

    <script is:inline>
      const favicon = document.getElementById("favicon");

      function updateFavicon(dark) {
        favicon.href = dark ? "/favicon-dark.svg" : "/favicon.svg";
      }

      const media = window.matchMedia("(prefers-color-scheme: dark)");
      updateFavicon(media.matches);
      media.addEventListener("change", (e) => updateFavicon(e.matches));
    </script>
  </head>
  <body
    class:list={["bg-light text-dark dark:bg-dark dark:text-light", className]}
  >
    <slot />
  </body>
</html>

<style is:global>
  .astro-code,
  .astro-code span {
    background-color: theme(colors.light) !important;
  }

  @media (prefers-color-scheme: dark) {
    .astro-code,
    .astro-code span {
      color: var(--shiki-dark) !important;
      background-color: theme(colors.gray.800) !important;
      font-style: var(--shiki-dark-font-style) !important;
      font-weight: var(--shiki-dark-font-weight) !important;
      text-decoration: var(--shiki-dark-text-decoration) !important;
    }
  }
</style>
